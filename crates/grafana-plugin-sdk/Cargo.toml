[package]
name = "grafana-plugin-sdk"
version = "0.4.2"
authors = ["Ben Sully <ben.sully@grafana.com>"]
license = "MIT/Apache-2.0"
edition = "2021"
rust-version = "1.57"
repository = "https://github.com/grafana/grafana-plugin-sdk-rust"
description = "SDK for building Grafana backend plugins."

[dependencies]
arrow2 = { version = "0.14.0", features = ["io_ipc"] }
chrono = "0.4.19"
futures-core = "0.3.17"
futures-util = "0.3.17"
grafana-plugin-sdk-macros = { version = "0.4.0", path = "../grafana-plugin-sdk-macros" }
http = "0.2.5"
itertools = "0.10.1"
num-traits = "0.2.14"
prost = "0.11.0"
reqwest_lib = { package = "reqwest", version = "0.11.6", optional = true }
serde = { version = "1.0.130", features = ["derive"] }
serde_json = { version = "1.0.69", features = ["float_roundtrip", "raw_value"] }
serde_with = "2.0.0"
thiserror = "1.0.30"
time = { version = "0.3.5", features = ["formatting", "macros"] }
tokio = { version = "1.13.0", features = ["rt-multi-thread"] }
tokio-stream = { version = "0.1.8", features = ["net"] }
tonic = "0.8.1"
tonic-health = "0.8.0"
tracing = "0.1.29"
tracing-core = "0.1.21"
tracing-log = "0.1.2"
tracing-serde = "0.1.2"
tracing-subscriber = { version = "0.3.1", features = [
  "env-filter",
  "json",
  "time",
] }

[dev-dependencies]
async-stream = "0.3.2"
bytes = "1.1.0"
futures = "0.3.17"
paste = "1.0.6"
pretty_assertions = "1.0.0"
prometheus = { version = "0.13.0", default-features = false }
tokio = { version = "1.13.0", features = ["rt-multi-thread"] }
tokio-stream = "0.1.8"

[build-dependencies]
prost-build = { version = "0.11.1", optional = true }
tonic-build = { version = "0.8.0", optional = true }

# docs.rs-specific configuration
[package.metadata.docs.rs]
# document all features
all-features = true
# defines the configuration attribute `docsrs`
rustdoc-args = ["--cfg", "docsrs"]

[features]
reqwest = ["reqwest_lib"]
# Since prost 0.11 we no longer use prost-build at build time to generate code,
# because it requires protoc. The generated code is instead checked in to source
# control. To regenerate code in the case of updated .proto definitions, build
# with this feature enabled.
gen-proto = ["dep:tonic-build", "dep:prost-build"]
