searchState.loadedDescShard("grafana_plugin_sdk", 0, "The Grafana Plugin SDK for Rust.\nRe-export of the arrow crate depended on by this crate.\nFunctionality for use by backend plugins.\nData types used throughout the SDK.\nGrafana Live features, providing streaming functionality …\nGenerates a <code>main</code> function that starts a <code>Plugin</code> with the …\nThe low-level structs generated from protocol definitions.\nContains useful helper traits for constructing <code>Field</code>s and …\nAdmin users can perform any administrative action, such as …\nSettings for an app instance.\nMarker struct for an app plugin.\nThe datasource, while acting as a gateway or proxy, …\nThe datasource was unable to parse the parameters or …\nType alias for a boxed iterator of query responses, useful …\nType alias for a pinned, boxed future with a fallible HTTP …\nType alias for a pinned, boxed stream of HTTP responses …\nType alias for a pinned, boxed stream of stream packets …\nA request for a resource call.\nThe type of error that can occur when performing a health …\nA request to check the health of a plugin.\nThe response to a health check request.\nThe type of error that can occur when collecting metrics.\nA request to collect metrics about a plugin.\nA response to a metric collection request.\nThe error returned when Grafana does not provide a …\nAn error occurred converting data from Grafana.\nErrors occurring when trying to interpret data passed from …\nAn error occurred converting data to Grafana.\nErrors occurring when trying to convert data into a format …\nThe datasource encountered another error, best represented …\nA query made by Grafana to the plugin as part of a …\nError supertrait used in <code>DataService::query_data</code>.\nStatus codes for <code>DataQueryError</code>.\nThe results from a <code>DataQuery</code>.\nUsed to respond for requests for data from datasources and …\nSettings for a datasource instance.\nMarker struct for a datasource plugin.\nTrait for services that provide a health check and/or …\nThe error occurred downstream of the plugin.\nEditors can create, modify and delete dashboards, and can …\nTrait describing how an error should be converted into a …\nErrors returned by plugin backends.\nThe plugin is in an error state.\nThe error type that can be returned by individual …\nThe type of error that can occur while fetching a stream …\nThe source of an error.\nThe datasource refuses to perform the requested action for …\nConfiguration passed to the plugin from Grafana.\nTrait marking the types of a plugin’s JSON data and …\nA <code>tracing</code> event formatter which writes events in a format …\nThe health status of a plugin.\nData returned from an initial request to subscribe to a …\nThe type returned as the initial response returned back to …\nThe instance settings for an app or data source instance.\nThe type of instance settings that requests to this plugin …\nThe datasource acknowledges that there’s an error, but …\nTrait indicating that a type can be fallibly converted …\nThe frame provided by Grafana was malformed.\nThe frame provided could not be serialized.\nThe JSON provided was invalid.\nThe path provided by Grafana was invalid.\nThe resource request was not a valid HTTP request.\nThe resource response was not a valid HTTP response.\nThe timestamp passed from Grafana was invalid.\nThe type of the plugin’s JSON data.\nThe type of JSON values returned by this stream service.\nMetrics collected from a plugin as part of a collect …\nThe <code>plugin_context</code> was missing from the request.\nThe <code>time_range</code> was missing from the query.\nThe datasource does not have any corresponding document to …\nThe requested path was not found.\nThe requested path was not found.\nThe datasource does not support the requested action. …\nThe query was successful.\nThe request to publish was accepted.\nThe plugin is working as expected.\nThe request to subscribe was accepted.\nThe user did not have permission to publish to the …\nThe user did not have permission to subscribe to the …\nMain entrypoint into the Grafana plugin SDK.\nThe error occurred in the plugin.\nHolds contextual information about a plugin request: …\nMarker trait for plugins, used to indicate the type of …\nThe type of the plugin\nA request to publish data to a stream.\nThe response to a stream publish request.\nThe status of a publish stream response.\nThe type of the JSON query sent from Grafana to the plugin.\nA request for data made by Grafana.\nThe error type that can be returned by individual queries.\nTrait for plugins that can handle arbitrary resource …\nA role within Grafana.\nA request to ‘run’ a stream, i.e. begin streaming data.\nThe type of the plugin’s secure JSON data.\nAn error occurred while starting the plugin.\nThe type of stream returned by the <code>query_data</code> method.\nThe type of stream of optional additional data returned by …\nThe type of stream returned by <code>run_stream</code>.\nA packet of data to be streamed back to the subscribed …\nTrait for plugins that wish to provide uni- or …\nA request to ‘run’ a stream, i.e. begin streaming data.\nThe response to a stream subscription request.\nThe status of a subscribe stream response.\nThe time range for a query.\nThe datasource did not complete the request within the …\nThe client is rate limited by the datasource and should …\nThe datasource does not recognize the client’s …\nThe plugin instance’s JSON data sent by Grafana could …\nThe query’s JSON data sent by Grafana could not be …\nThe plugin instance’s ‘secure’ JSON data sent by …\nAn error that should be updated to contain an accurate …\nThe plugin was unable to determine if it was healthy.\nThe role string provided by Grafana didn’t match the …\nA Grafana user.\nThe datasource was able to parse the payload for the …\nViewers can view dashboards, but cannot edit them or …\nThe API version when the settings were saved. NOTE: this …\nThe API version when the settings were saved. NOTE: this …\nReturn the URL of the Grafana instance.\nRe-export of <code>async_trait</code> proc macro, so plugin …\nIndicates if this datasource instance should use basic …\nThe configured user for basic authentication.\nHandle a resource request.\nCheck the health of a plugin.\nCollect metrics for a plugin.\nOptional raw data.\nOptional raw data.\nData to be published to the stream.\nData returned in response to publishing.\nAdd a data service to this plugin.\nThe configured database for a datasource instance. (e.g. …\nGet the decrypted secure JSON data for the app or data …\nKey-value pairs where the encrypted configuration in …\nKey-value pairs where the encrypted configuration in …\nAdd a diagnostics service to this plugin.\nThe user’s email.\nCreate a <code>CheckHealthResponse</code> with status …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe start time of the query.\nCreate a <code>StreamPacket</code> from arbitrary bytes.\nCreate some initial data representing a <code>Frame</code>.\nCreate a <code>StreamPacket</code> representing a <code>Frame</code>.\nCreate some initial data representing some JSON.\nCreate a <code>StreamPacket</code> representing some JSON.\nConfiguration passed to the plugin from Grafana.\nHeaders included along with the request by Grafana.\nHeaders included along with the request by Grafana.\nThe Grafana assigned numeric identifier of the the …\nInitialize a default <code>tracing_subscriber::fmt::Subscriber</code> …\nOptional initial data to return to the client, used to …\nInitialize the plugin, returning the <code>TcpListener</code> that the …\nThe instance settings for the plugin.\nThe suggested duration between time points in a time …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPerforms the conversion.\nConvert this error into a HTTP response.\nConvert this error into a HTTP response.\nGet the JSON data for the app or data source instance.\nIncludes the non-secret settings of the app instance …\nThe raw DataSourceConfig as JSON as stored by the Grafana …\nAny additional details to include with the response.\nCreate a <code>tracing</code> <code>Layer</code> configured to log events in a …\nThe user’s login.\nThe maximum number of datapoints that should be returned …\nA message associated with the health check.\nThe metrics collected from the plugin.\nThe user’s display name.\nThe configured name of the datasource instance.\nCreate a new <code>PublishStreamResponse</code>.\nCreate a new <code>Plugin</code> with no registered services.\nCreate a new <code>DataResponse</code> with the given <code>ref_id</code> and <code>frames</code>.\nCreate a new <code>CheckHealthResponse</code>.\nCreate a new <code>CollectMetricsResponse</code>.\nCreate a new <code>SubscribeStreamResponse</code>.\nCreate a <code>PublishStreamResponse</code> with status …\nCreate a <code>SubscribeStreamResponse</code> with status …\nCreate a <code>PublishStreamResponse</code> with status …\nCreate a <code>CheckHealthResponse</code> with status <code>HealthStatus::Ok</code>.\nCreate a <code>SubscribeStreamResponse</code> with status …\nThe organisation ID from which the request originated.\nThe subscription channel path that the request wishes to …\nThe subscription path; see module level comments for …\nThe subscription path; see module level comments for …\nCreate a <code>PublishStreamResponse</code> with status …\nCreate a <code>SubscribeStreamResponse</code> with status …\nReturn the client secret for the app plugin’s service …\nDetails of the plugin instance from which the request …\nDetails of the plugin instance from which the request …\nDetails of the plugin instance from which the request …\nDetails of the plugin instance from which the request …\nDetails of the plugin instance from which the request …\nMetadata about the plugin from which the request …\nDetails of the plugin instance from which the request …\nThe ID of the plugin.\nCreate a payload containing Prometheus metrics, in …\nThe metrics, in Prometheus text exposition format.\nHandle requests to publish to a plugin or datasource …\nThe queries requested by a user or alert.\nThe inner query.\nQuery data for an input request.\nAn identifier for the type of query.\nReturn the <code>ref_id</code> of the incoming query to which this …\nThe unique identifier of the query, set by the frontend …\nThe HTTP request.\nAdd a resource service to this plugin.\nThe user’s role.\nBegin sending stream packets to a client.\nAdd a shutdown handler to the plugin, listening on the …\nThe source of the error.\nThe source of the error.\nStart the plugin.\nA suitable <code>DataQueryStatus</code> to represent this error.\nA suitable <code>DataQueryStatus</code> to represent this error.\nThe status of the response.\nThe status of the plugin.\nThe status of the response.\nAdd a streaming service to this plugin.\nHandle requests to begin a subscription to a plugin or …\nThe start and end of the query requested by the frontend.\nThe end time of the query.\nThe unique identifier of the plugin that the request is …\nThe Grafana assigned string identifier of the the …\nCreate a <code>CheckHealthResponse</code> with status …\nThe last time the configuration for the app plugin …\nThe last time the configuration for the datasource …\nThe configured URL of a datasource instance (e.g. the URL …\nA configured user for a datasource instance. This is not a …\nDetails about the Grafana user who made the request.\nUpdate <code>self</code> with the given JSON details, returning a new …\nThe underlying JSON error.\nThe underlying JSON error.\nThe underlying JSON error.\nThe JSON for which deserialization was attempted.\nThe JSON for which deserialization was attempted.\nThe keys found in the underlying decrypted secure JSON.\nThe underlying JSON error.\nThe underlying <code>http</code> error.\nThe underlying reason for the error.\nThe original timestamp in milliseconds.\nThe underlying JSON error.\nThe underlying JSON error.\nThe logical arrow data type that an arrow array of this …\nPick thresholds based on the absolute value.\nSerialize both the schema and data.\nHelper trait for creating a <code>Field</code> from an <code>Array</code>.\nHelper trait for creating a <code>Field</code> from an <code>Array</code>.\nAn error has occurred when serializing to Arrow IPC format.\nA boolean.\nA boolean.\nA reference to a checked and verified <code>Frame</code>, which is …\nA wrapper around an <code>Option&lt;f64&gt;</code> used in various backend …\nSuggest the “data” tab of the panel inspector.\nLinks to use when clicking on a result.\nSerialize just the data.\nThere is a datatype mismatch in a field.\nThe string representation for null values.\nThe type to which <code>Self</code> will be converted when storing …\nMatch empty values.\nErrors that can occur when interacting with the Grafana …\nError severity.\nSuggest the “error” tab of the panel inspector.\nMatch <code>false</code>.\nA typed column within a <code>Frame</code>.\nThe display properties for a <code>Field</code>.\nOccurs when a frame had mismatched field lengths while …\nIndicates that a type is can be stored in an Arrow array.\nFlame graph visualization.\nA 32 bit float.\nA 64 bit float.\nA structured, two-dimensional data frame.\nOptions for customizing the way a <code>Frame</code> is serialized.\nConvenience trait for creating a <code>Frame</code> from an iterator of …\nGraph visualisation.\nThe type of arrow array this field type is stored in.\nInformational severity.\nA suggestion for which tab to display in the panel …\nA 16 bit signed integer.\nA 32 bit signed integer.\nA 64 bit signed integer.\nAn 8 bit signed integer.\nIndicates that a <code>Field</code> can be created from this type.\nIndicates that a type can be converted to one that is …\nConvenience trait for converting iterators of <code>Field</code>s into …\nIndicates that a <code>Field</code> of optional values can be created …\nLogs visualisation.\nSuggest the “meta” tab of the panel inspector.\nMetadata about a <code>Frame</code>.\nMatch <code>NaN</code>.\nNode graph visualization.\nDo not suggest anything.\nA notification to be displayed in Grafana’s UI.\nMatch <code>null</code>.\nMatch <code>null</code> and <code>NaN</code>.\nA number.\nThe type of arrow array to convert to when storing values …\nThresholds should be treated as relative to the min/max.\nUsed for storing arbitrary statistics metadata related to …\nMap ranges of floats to new values.\nSerialize just the schema.\nThe severity level of a notice.\nThe ‘simple’ type of this data.\nMap special values to new values.\nSpecial values that can be mapped to new text and colour …\nSuggest the “stats” tab of the panel inspector.\nA string.\nA string.\nThe standard name for time series time fields.\nThe corresponding <code>TypeInfoType</code> for this original data type.\nTable visualisation.\nA single step on the threshold list.\nConfiguration for thresholds for a field.\nHow thresholds should be evaluated.\nA timestamp, in UTC.\nA timestamp.\nTrace visualisation.\nMatch <code>true</code>.\nThe type information for a <code>Frame</code> as understood by Grafana.\nValid types understood by Grafana.\nA 16 bit unsigned integer.\nA 32 bit unsigned integer.\nA 64 bit unsigned integer.\nAn 8 bit unsigned integer.\nA field was created using an Arrow array with a datatype …\nThe standard name for time series value fields.\nMap strings to new strings directly.\nAllows input values to be mapped to text and colour.\nA new value to be displayed when a <code>ValueMapping</code> matches an …\nVisualiation type options understood by Grafana.\nWarning severity.\nAdd a field to this frame.\nPath to a stream in Grafana Live that has real-time …\nCheck this unchecked Frame, returning a <code>CheckedFrame</code> ready …\nThe colour to use when displaying the value.\nThe colour to use for this threshold.\nOptional display configuration used by Grafana.\nConvert the logical type of <code>Self::InArray</code>.\nPanel-specific values.\nCustom datasource specific values.\nThe number of decimal places to display.\nHuman readable field metadata.\nOverrides Grafana default naming.\nOverrides Grafana default naming in a better way that …\nThe raw query sent to the underlying system after all …\nInformation used to identify the field to which this …\nGet an immutable reference to the the <code>Fields</code> of this <code>Frame</code>.\nGet a mutable reference to the the <code>Fields</code> of this <code>Frame</code>.\nIndicates if the field’s data can be filtered by …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a <code>Frame</code> with the given name from <code>fields</code>.\nUsed for ordering in the UI.\nAn optional suggestion for which tab to display in the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a <code>Field</code> from <code>self</code>.\nConvert this type into an (optional) field type.\nCreate a <code>Frame</code> with the given name from <code>self</code>.\nCreate a <code>Field</code> from <code>self</code>, with <code>None</code> values marked as null.\nAn optional set of key-value pairs that, combined with the …\nAn optional link to display in the Grafana UI.\nLinks to use when clicking on a result.\nMappings from input value to display string.\nThe maximum value of fields in the column.\nOptional metadata describing this frame.\nThe minimum value of fields in the column.\nHow thresholds should be evaluated.\nThe name of this field.\nThe name of this frame.\nCreate a new, empty <code>Frame</code> with no fields and no metadata.\nCreate a new <code>Notice</code> with the given text.\nCreate a new <code>QueryStat </code> for a field.\nAn alternative string to use when no value is present.\nAdditional information about the data in the frame that …\nAn explicit path to the field in the datasource.\nA browsable path on the datasource.\nDefines the separator pattern to decode a hierarchy. The …\nThe preferred visualisation option when used in Grafana’…\nSet the channel of the frame.\nSet the values of this field using an iterator of values.\nSet the values of this field using an <code>Array</code>.\nSet the values of this field using an iterator of optional …\nThe severity level of this notice.\nGet the corresponding <code>SimpleType</code>.\nThe state of the alert.\nQuery result statistics.\nThe threshold steps.\nIs the target blank?\nThe text to display.\nFreeform descriptive text to display on the notice.\nMappings from numeric values to states.\nThe title text to display.\nCreate a <code>Field</code> using <code>self</code> as the values.\nCreate a <code>Field</code> using <code>self</code> as the values.\nThe string to display to represent this field’s unit, …\nThe URL to link to.\nThe upper bound of this threshold.\nThe actual statistic.\nGet the values of this field as a [<code>&amp;dyn Array</code>].\nReturn a new field with the given config.\nReturn a new frame with an added field.\nReturn a new frame with added fields.\nReturn a new field with the given labels.\nReturn a new frame with the given metadata.\nReturn a new field with the given name.\nReturn a new frame with the given name.\nIndicates that the datasource knows how to update this …\nThe existing datatype of the field.\nThe name of the field.\nThe names and lengths of the fields in the <code>Frame</code>.\nThe datatype of the new data.\nThe minimum value to match.\nThe input value to match.\nThe result to be shown instead of the matched value.\nThe result to be shown instead of the matched values.\nThe maximum value to match.\nThe identifier of a pub/sub channel in Grafana Live.\nThe error returned when parsing a channel.\nPasses control to a datasource plugin.\nThe channel was empty.\nThe channel exceeded the maximum length of …\nBuilt-in real-time features of Grafana core.\nThe channel’s namespace was invalid.\nThe channel’s path was invalid.\nThe channel’s scope was invalid.\nThe maximum length of a channel when represented as a …\nThe channel did not contain a namespace segment.\nThe channel did not contain a path segment.\nThe channel did not contain a scope segment.\nThe namespace of a channel.\nThe path of a channel.\nPasses control to a plugin.\nThe scope of a channel.\nA managed data frame stream.\nAccess the inner namespace as a <code>&amp;str</code>.\nAccess the inner path as a <code>&amp;str</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the namespace of this channel.\nCreate a new <code>Namespace</code>.\nCreate a new <code>Path</code>.\nCreate a new channel from pre-validated parts.\nGet the path of this channel.\nGet the scope of this channel.\nThe full namespace string supplied.\nThe full namespace string supplied.\nThe unique invalid characters detected in the invalid …\nThe unique invalid characters detected in the invalid …\nAdmissionRequest contains information from a kubernetes …\nConversionRequest supports converting objects from one …\nConversionResponse contains the converted objects\nGroupVersion represents the API group and version of a …\nIdentify the Object properties\nReturn a mutated copy of the object in a form that can be …\nQueryDataRequest\nRawObject contains a resource serialized into a byte array …\nStatus structure is copied from: …\nCheck if an object can be admitted\nGenerated client implementations.\nGenerated server implementations.\nNested message and enum types in <code>AdmissionRequest</code>.\nAllowed indicates whether or not the admission request was …\nAllowed indicates whether or not the admission request was …\nThe API version when the settings were saved NOTE: this …\nThe API version when the settings were saved. NOTE: this …\nThe API version that initiated a request\nApp plugin instance settings is the configured app …\nRaw HTTP body bytes sent to the client\nNested message and enum types in <code>CheckHealthResponse</code>.\nMaps to raw HTTP status codes when passed over HTTP\nSuggested HTTP return code for this status, 0 if not set. …\nNested message and enum types in <code>CollectMetricsResponse</code>.\nContentType is the media type of the raw object\noptional raw data. May be used as an extra payload …\nJSON-encoded data to return to a client in a successful …\ndata that user wants to publish into a stream (only …\nJSON-encoded data to publish into a channel. This can be …\noptional raw data. May be used as an extra payload …\nJSON-encoded data to publish into a channel.\nGenerated client implementations.\nGenerated server implementations.\nData source instance settings is the configured data …\nGenerated client implementations.\nGenerated server implementations.\nError message\nError source\nArrow encoded DataFrames Frame has its own meta, warnings, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe grafana configuration as a map of key/value pairs.\nRaw HTTP headers sent to the client\nEnvironment info\nEnvironment info\nDeprecatd: Internal ID, do not use this for anythign …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCurrently not used and not exposed in the frontend\nThe object kind\ntimestamp when the settings where last changed\nA human-readable description of the status of this …\nObject is the object in the request.  This includes the …\nMutated object bytes\nObjects to convert +listType=atomic\nobjects is the list of converted version of <code>request.objects</code>…\nOldObject is the object as it currently exists in storage. …\nReturns the enum value of <code>operation</code>, or the default if the …\nThe requested operation\nThe Grafana organization id the request originates from.\npath part of channel.\npath part of a channel.\npath part of a channel.\nNOTE: this may not include app or datasource instance …\nNOTE: this may not include app or datasource instance …\nThe unique identifier of the plugin the request is …\nThe version of the plugin the request is targeted for.\nNested message and enum types in <code>PublishStreamResponse</code>.\nList of data queries\nRaw is the serialized object\nA machine-readable description of why this operation is in …\nGenerated client implementations.\nGenerated client implementations.\nGenerated server implementations.\nGenerated server implementations.\nMap of refId to response\nResult contains extra details into why an admission …\nResult contains extra details into why an admission …\nresult contains extra details into why an admission …\nSets <code>operation</code> to the provided enum value.\nSets <code>status</code> to the provided enum value.\nSets <code>status</code> to the provided enum value.\nSets <code>status</code> to the provided enum value.\nReturns the enum value of <code>status</code>, or the default if the …\nReturns the enum value of <code>status</code>, or the default if the …\nReturns the enum value of <code>status</code>, or the default if the …\nWhen errors exist or a non 2XX status, clients will be …\nstatus of subscribe response.\nstatus of publish response.\nStatus of the operation. One of: “Success” or “…\nGenerated client implementations.\nGenerated server implementations.\nNested message and enum types in <code>SubscribeStreamResponse</code>.\nTarget converted version\nDatasoruce unique ID (within an org/stack namespace)\nuid is an identifier for the individual request/response. …\nuid is an identifier for the individual request/response. …\nThe Grafana user the request originates from.\nThe user agent of the Grafana server that initiated the …\nwarnings is a list of warning messages to return to the …\nwarnings is a list of warning messages to return to the …\nAdmission control is a service based on the kubernetes …\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nReturn a modified copy of the request that can be saved or …\nCompress requests with the given encoding.\nValidate a resource – the response is a simple yes/no\nGenerated trait containing gRPC methods that should be …\nAdmission control is a service based on the kubernetes …\nGenerated gRPC service name\nEnable decompressing requests with the given encoding.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nReturn a modified copy of the request that can be saved or …\nCompress responses with the given encoding, if the client …\nValidate a resource – the response is a simple yes/no\nOperation is the type of resource operation being checked …\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>Operation</code>, or <code>None</code> if <code>value</code> is not a …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Operation</code>.\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>HealthStatus</code>, or <code>None</code> if <code>value</code> is not …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>HealthStatus</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress requests with the given encoding.\nGenerated trait containing gRPC methods that should be …\nGenerated gRPC service name\nEnable decompressing requests with the given encoding.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress responses with the given encoding, if the client …\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress requests with the given encoding.\nGenerated trait containing gRPC methods that should be …\nGenerated gRPC service name\nEnable decompressing requests with the given encoding.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress responses with the given encoding, if the client …\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>Status</code>, or <code>None</code> if <code>value</code> is not a …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Status</code>.\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress requests with the given encoding.\nResourceConversion is a service that can be used to …\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given …\nConvert objects to a target version\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress requests with the given encoding.\nGenerated trait containing gRPC methods that should be …\nResourceConversion is a service that can be used to …\nGenerated gRPC service name\nEnable decompressing requests with the given encoding.\nConvert objects to a target version\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress responses with the given encoding, if the client …\nServer streaming response type for the CallResource method.\nGenerated trait containing gRPC methods that should be …\nGenerated gRPC service name\nEnable decompressing requests with the given encoding.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress responses with the given encoding, if the client …\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nPublishStream called when a user tries to publish to a …\nRunStream will be initiated by Grafana to consume a …\nCompress requests with the given encoding.\nSubscribeStream called when a user tries to subscribe to a …\nServer streaming response type for the RunStream method.\nGenerated gRPC service name\nGenerated trait containing gRPC methods that should be …\nEnable decompressing requests with the given encoding.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nPublishStream called when a user tries to publish to a …\nRunStream will be initiated by Grafana to consume a …\nCompress responses with the given encoding, if the client …\nSubscribeStream called when a user tries to subscribe to a …\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>Status</code>, or <code>None</code> if <code>value</code> is not a …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Status</code>.")